
/** CREER UN JAR  sous Intellij */
	1/ Création d'un  Artifact pour le build:
  	-> File -> ProjectStructure.. -> cliquez sur '+' en haut à gauche du panneau du milieu -> JAR -> From modules with dependencies....
	-> Vérifier le nom du module, choisir  le nom de la class Main pour un jar executable et l'emplacement du fichier MANIFEST.MF (par defautt il trouve les bons params)
	-> Choisir d'autes options si nécéssaire -> Ok pour enregistrer.
	On peut créer ainsi plusieurs Artifacts selon les configurations necessaire.
	  
	2/ Execution du build:
	-> Build -> Build Artifacts...Build Artifact -> Action -> Build (ou autre chose)

/** AJOUTER ET ENLEVER DES LIBS DU BUILD PATH
	Ajouter des librairies au build path:
		Méthode rapide: -> créer un répertoire à la racine du projer avec les jars -> selectionner le/les jars -> click droit -> Add as library
		Méthode par menu: -> File -> Project Stucture... -> Libraries -> Cliquez sur '+' en haut à gauche du panneau du milieu -> Java -> Choisir le ou les jar à ajouter.
	Enlever des librairie au build path:
		Méthode par menu: -> File -> Project Stucture... -> Libraries -> Selectionner le/les jars à supprimer -> click  bouton droit -> supprimer
	
	Astuce: Pour voir si un jar est bien ajouter au build path, un chevron apparait devant le jar pour le parcourir.


/** A LA COMPILATION: avec les --add-exports*/
-> (Dans la fenetre principale) -> File -> Settings -> Build, Execution, Deployment -> Compiler -> Java Compiler
-> Override compiler parameters -> per-module -> dans "Module": le nom du projet et dans "Compilation options" les
--add-exports [ex: --add-exports java.base/sun.security.x509=ALL-UNNAMED]



/** A l'EXECUTION DANS INTELLIJ pour ajouter les --add-exports et plus généralement des paramètres à la VM pour exécuter dans INTELLIJ  */
-> click droit dans la classe Main -> Modify run configuration... -> modify options (En haut à droite) -> Java -> Add VM options
un champ de type input apparait dans la fenêtre précédente et on peut renseigner les paramètres pour la VM. 


/** A L'EXECUTION DU JAR:  pour lancer execution du jar avec tous les modules + debug certpath et ocsp*/
/IdeaProjects/ideFirstProject/out/artifacts/ideFirstProject_jar$
 java --add-modules jdk.crypto.cryptoki --add-exports java.rmi/sun.rmi.transport=ALL-UNNAMED
 --add-exports java.rmi/sun.rmi.server=ALL-UNNAMED
 --add-exports java.base/sun.security.validator=ALL-UNNAMED
 --add-exports java.base/sun.security.x509=ALL-UNNAMED
 --add-exports java.base/sun.security.util=ALL-UNNAMED
 --add-exports jdk.crypto.cryptoki/sun.security.pkcs11.wrapper=ALL-UNNAMED
 --add-exports java.desktop/sun.swing=ALL-UNNAMED
 --add-exports java.base/sun.security.provider.certpath=ALL-UNNAMED
 --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
 --add-exports java.base/sun.util.calendar=ALL-UNNAMED
 -Djava.security.debug=certpath,ocsp
 -jar ideFirstProject.jar
